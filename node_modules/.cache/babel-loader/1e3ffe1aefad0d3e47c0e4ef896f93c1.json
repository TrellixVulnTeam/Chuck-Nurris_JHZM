{"ast":null,"code":"var _jsxFileName = \"/home/nivos/Desktop/NK/chuck-norris/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'react-tabs/style/react-tabs.css';\nimport Header from './Components/Header';\nimport Tabs from './Components/Tabs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [jokes, setJokes] = useState([]);\n\n  const search = e => {\n    e.preventDefault();\n    fetch(`https://api.chucknorris.io/jokes/search?query=${query}`).then(res => res.json()).then(json => setJokes(json.result)).catch(err => console.log(err));\n    setQuery('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"uNjFmuTsNjn19q2+ea/KDVTe8mI=\");\n\n_c = App;\nexport default App;\n{\n  /* <Tabs>\n           <TabList>\n             <Tab>Random</Tab>\n             <Tab>Search</Tab>\n           </TabList>\n            <TabPanel>\n            \n           <TabPanel>\n             <form onSubmit={search}>\n               <label for=\"query\">Key word(s)</label>\n               <input id=\"query\" type=\"text\" onChange={(e) => setQuery(e.target.value)} value={query} />\n                <button>GO</button>\n             </form>\n              <>\n               {jokes?.map((elm, index) =>\n                 <li key={index}>{elm.value}</li>\n               )}\n             </>\n           </TabPanel>\n         </Tabs> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nivos/Desktop/NK/chuck-norris/src/App.js"],"names":["React","useState","Header","Tabs","App","query","setQuery","jokes","setJokes","search","e","preventDefault","fetch","then","res","json","result","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iCAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAIA,QAAMQ,MAAM,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAE,iDAAgDP,KAAM,EAAxD,CAAL,CACGQ,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACC,MAAN,CAFxB,EAGGC,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHhB;AAIAZ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAPD;;AAWA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAxBD;;GAAMF,G;;KAAAA,G;AA0BN,eAAeA,GAAf;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGmB","sourcesContent":["import React, { useState } from 'react'\nimport 'react-tabs/style/react-tabs.css'\nimport Header from './Components/Header'\nimport Tabs from './Components/Tabs'\n\nconst App = () => {\n\n  const [query, setQuery] = useState('');\n  const [jokes, setJokes] = useState([]);\n\n\n\n  const search = (e) => {\n    e.preventDefault();\n    fetch(`https://api.chucknorris.io/jokes/search?query=${query}`)\n      .then(res => res.json())\n      .then(json => setJokes(json.result))\n      .catch(err => console.log(err))\n    setQuery('');\n  }\n\n\n\n  return (\n    <>\n      <Header />\n      <Tabs />\n    </>\n  )\n}\n\nexport default App;\n\n\n{/* <Tabs>\n          <TabList>\n            <Tab>Random</Tab>\n            <Tab>Search</Tab>\n          </TabList>\n\n          <TabPanel>\n           \n          <TabPanel>\n            <form onSubmit={search}>\n              <label for=\"query\">Key word(s)</label>\n              <input id=\"query\" type=\"text\" onChange={(e) => setQuery(e.target.value)} value={query} />\n\n              <button>GO</button>\n            </form>\n\n            <>\n              {jokes?.map((elm, index) =>\n                <li key={index}>{elm.value}</li>\n              )}\n            </>\n          </TabPanel>\n        </Tabs> */}"]},"metadata":{},"sourceType":"module"}