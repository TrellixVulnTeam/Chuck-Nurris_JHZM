{"ast":null,"code":"var _jsxFileName = \"/home/nivos/Desktop/NK/chuck-norris/src/Components/RandomJoke/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport JokeCard from '../JokeCard';\nimport TabHeader from '../TabHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RandomJoke() {\n  _s();\n\n  const [randomJoke, setRandomJoke] = useState('');\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('-');\n  const tab = 0;\n\n  const byCategory = e => {\n    e.preventDefault();\n    const q = category !== '-' ? `?category=${category}` : '';\n    fetch(`https://api.chucknorris.io/jokes/random${q}`).then(res => res.json()).then(json => setRandomJoke(() => {\n      if (name !== '') {\n        const regex = /Chuck Norris/i;\n        return json.value.replace(regex, name.toString()).replace(regex, name.toString());\n      }\n\n      return json.value;\n    })).catch(err => console.log(err));\n  };\n\n  const props = {\n    byCategory,\n    setName,\n    name,\n    tab\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TabHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), randomJoke ? /*#__PURE__*/_jsxDEV(JokeCard, {\n      joke: randomJoke\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(RandomJoke, \"G0zEPDInLrgUTF2A2nSHD9dtlGY=\");\n\n_c = RandomJoke;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomJoke\");","map":{"version":3,"sources":["/home/nivos/Desktop/NK/chuck-norris/src/Components/RandomJoke/index.js"],"names":["React","useEffect","useState","JokeCard","TabHeader","RandomJoke","randomJoke","setRandomJoke","name","setName","category","setCategory","tab","byCategory","e","preventDefault","q","fetch","then","res","json","regex","value","replace","toString","catch","err","console","log","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,GAAD,CAAxC;AACA,QAAMU,GAAG,GAAG,CAAZ;;AAGA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,CAAC,GAAGN,QAAQ,KAAK,GAAb,GAAoB,aAAYA,QAAS,EAAzC,GAA6C,EAAvD;AACAO,IAAAA,KAAK,CAAE,0CAAyCD,CAAE,EAA7C,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAIb,aAAa,CAAC,MAAM;AAChC,UAAIC,IAAI,KAAK,EAAb,EAAiB;AACf,cAAMa,KAAK,GAAG,eAAd;AACA,eAAOD,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmBF,KAAnB,EAA0Bb,IAAI,CAACgB,QAAL,EAA1B,EAA2CD,OAA3C,CAAmDF,KAAnD,EAA0Db,IAAI,CAACgB,QAAL,EAA1D,CAAP;AACD;;AACD,aAAOJ,IAAI,CAACE,KAAZ;AACD,KAN0B,CAF7B,EASGG,KATH,CASSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAThB;AAUD,GAbD;;AAcA,QAAMG,KAAK,GAAG;AACZhB,IAAAA,UADY;AACAJ,IAAAA,OADA;AACSD,IAAAA,IADT;AACeI,IAAAA;AADf,GAAd;AAIA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,UAAU,gBACT,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YADS,GAEP,IAJN;AAAA,kBADF;AAQD;;GAnCuBD,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './index.css'\nimport JokeCard from '../JokeCard'\nimport TabHeader from '../TabHeader'\n\nexport default function RandomJoke() {\n\n  const [randomJoke, setRandomJoke] = useState('');\n\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('-');\n  const tab = 0;\n\n\n  const byCategory = (e) => {\n    e.preventDefault();\n    const q = category !== '-' ? `?category=${category}` : '';\n    fetch(`https://api.chucknorris.io/jokes/random${q}`)\n      .then(res => res.json())\n      .then(json => setRandomJoke(() => {\n        if (name !== '') {\n          const regex = /Chuck Norris/i;\n          return json.value.replace(regex, name.toString()).replace(regex, name.toString());\n        }\n        return json.value;\n      }))\n      .catch(err => console.log(err))\n  }\n  const props = {\n    byCategory, setName, name, tab\n  }\n\n  return (\n    <>\n      <TabHeader />\n      {randomJoke ? (\n        <JokeCard joke={randomJoke} />\n      ) : null}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}